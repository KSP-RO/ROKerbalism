// =================================================================================
// This is the official profile of the Realism Overhaul Mod
// =================================================================================

// SOURCES
//
// NTRS - Fuel Cells for Space Science Applications (2003): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20040010319.pdf
// NTRS - The Fuel Cell in Space (1989): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19900002488.pdf
// NTRS - Apollo portable life support system performance report (1972): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19720019460.pdf
// NTRS - Radiation Protection for Lunar Mission Scenarios (2005): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20050215115.pdf
// NHRP - Risk of Radiation Carcinogenesis(2009) : https://humanresearchroadmap.nasa.gov/evidence/reports/Carcinogenesis.pdf
// NTRS - Physical Basis of Radiation Protection in Space Travel, Cucinotta : https://www.academia.edu/29473649/Physical_basis_of_radiation_protection_in_space_travel
// NTRS - Would Current ISS Recycling Life Support Systems Save Mass on a Mars Transit? (2017) : https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20170007268.pdf


	// Carbon Dioxide Toxicity
	// 1% in air = Drowsiness
	// 3% in air = Mild narcosis, Reduced Hearing, Increased Heart Rate and Blood Pressure
	// 5% in air = Dizziness, Confusion, Headache, Shortness of Breath
	// 7-10% in air = Unconsciousness, Muscle Tremors, Suffocation and Death

Profile
{
	name = RealismOverhaul

// ==============================================================================
// SUPPLIES
// ==============================================================================

Supply
{
	resource = ElectricCharge
	on_eva = 1260.0 //temporary 350Wh based on the 279/360Wh batteries in the apollo PLSS
	low_message = $VESSEL batteries are getting low@<i>We must shut down non-essential systems</i>
	empty_message = $VESSEL has run out of ElectricCharge@<i>Life support systems are off</i>|$VESSEL is out of ElectricCharge@<i>We no longer have control</i>
	refill_message = $VESSEL batteries have been recharged@<i>All systems are back online</i>
}
Supply
{
	resource = Food
	low_message = Food reserves are getting low on $VESSEL@<i>All edible items are being rationed</i>
	empty_message = There is no more food on $VESSEL@<i>The crew prepares for the worst</i>
	refill_message = $VESSEL food reserves restored@<i>Rations have returned to normal amounts</i>
}
Supply
{
	resource = Water
	on_eva = 6.5 // more than enough for an 8h EVA
	low_message = Water reserves are getting low on $VESSEL@<i>Bathing has been suspended</i>
	empty_message = $VESSEL is completely out of water@<i>We are in a state of emergency</i>
	refill_message = $VESSEL has restocked water reserves@<i>Regular bathing schedules can resume</i>
}
Supply
{
	resource = Oxygen
	on_eva = 195 // 8 hours
	low_message = Oxygen reserves are dangerously low on $VESSEL@<i>Something must be done immediately</i>
	empty_message = $VESSEL has run out of Oxygen@<i>It is only a matter of time for the crew</i>
	refill_message = $VESSEL Oxygen reserves refilled@<i>Everyone is breathing easier</i>
}
Supply
{
	resource = Nitrogen
	low_message = Nitrogen reserves are low on $VESSEL@<i>Please send a resupply mission</i>
	empty_message = $VESSEL is out of Nitrogen@<i>The crew should consider getting in their suits</i>
	refill_message = $VESSEL Nitrogen reserves refilled@<i>Normal operations can resume</i>
}
Supply
{
	resource = LithiumHydroxide
	low_message = Lithium Hydroxide reserves are low on $VESSEL@<i>Please send a resupply mission</i>
	empty_message = $VESSEL is out of Lithium Hydroxide@<i>We can no longer scrub CO2</i>
	refill_message = $VESSEL Lithium Hydroxide reserves refilled@<i>Normal operations can resume</i>
}
Supply
{
	resource = PotassiumSuperoxide
	low_message = Potassium Superoxide reserves are low on $VESSEL@<i>Please send a resupply mission</i>
	empty_message = $VESSEL is out of Potassium Superoxide@<i>O2 can no longer be generated and CO2 is soon going to build up</i>
	refill_message = $VESSEL Potassium Superoxide reserves refilled@<i>Normal operations can resume</i>
}
Supply
{
	resource = LqdHydrogen
	low_message = $VESSEL Liquid Hydrogen reserves are low
	empty_message = $VESSEL Liquid Hydrogen tanks are empty
	refill_message = $VESSEL has refilled the Liquid Hydrogen tanks
}
Supply
{
	resource = LqdOxygen
	low_message = $VESSEL Liquid Oxygen reserves are low
	empty_message = $VESSEL Liquid Oxygen tanks are empty
	refill_message = $VESSEL has refilled the Liquid Oxygen tanks
}
Supply
{
	resource = Hydrogen
	low_message = $VESSEL Hydrogen reserves are low
	empty_message = $VESSEL Hydrogen tanks are empty
	refill_message = $VESSEL has refilled the Hydrogen tanks
}

// ==============================================================================
// RULES
// ==============================================================================

	Rule
	{
		name = climatization
		input = ElectricCharge
		rate = 0.0001 // per-kelvin (temp diff), per m^3 (living space), per-second
		degeneration = 0.00000007 // about 2h at 100k temp diff in 20m^3 - FIXME default kerbalism value, needs testing
		modifier = temperature,volume,per_capita
		warning_message = $ON_VESSEL$KERBAL feels cold|$ON_VESSEL$KERBAL is sweating
		danger_message = $ON_VESSEL$KERBAL is freezing|$ON_VESSEL$KERBAL is burning alive
		fatal_message = $ON_VESSEL$KERBAL froze to death|$ON_VESSEL$KERBAL was burned alive
		relax_message = $ON_VESSEL$KERBAL hypothermia is under control|$ON_VESSEL$KERBAL is cooling down
	}
	Rule
	{
		name = eating
		input = Food
		output = Waste
		rate = 1.94976 // Based on RO-TACLS Profile (5.84928 per day)
		interval = 28800.0 // 3 Meals per day
		individuality = 0.00 // Everyone eats the same amount
		degeneration = 0.0111111 // 90 meals, 30 days (taken from TACLS profile)
		warning_message = $ON_VESSEL$KERBAL is hungry
		danger_message = $ON_VESSEL$KERBAL is starving
		fatal_message = $ON_VESSEL$KERBAL starved to death
		relax_message = $ON_VESSEL$KERBAL is enjoying a meal
	}
	Rule
	{
		name = drinking
		input = Water
		output = WasteWater
		rate = 0.774144 // Based on RO-TACLS Profile (3.87072 per day)
		interval = 17280.0 // 5 drinks per-day
		degeneration = 0.0666666 // 15 drinks, 3 days (taken from TACLS profile)
		individuality = 0.00 // Everyone uses the same amount
		warning_threshold = 0.1
		warning_message = $ON_VESSEL$KERBAL is thirsty
		danger_message = $ON_VESSEL$KERBAL is dehydrated
		fatal_message = $ON_VESSEL$KERBAL died from dehydration
		relax_message = $ON_VESSEL$KERBAL is enjoying a drink
	}
	Rule
	{
		name = breathing
		input = Oxygen
		output = WasteAtmosphere
		rate = 0.00685 // Based on RO-TACLS Profile (591.84 per day)
		degeneration = 0.00555555 // 3 minutes (taken from TACLS profile)
		modifier = non_breathable
		individuality = 0.00 // Everyone uses the same amount
		warning_threshold = 0.01
		danger_threshold = 0.5
		warning_message = $ON_VESSEL$KERBAL can't breathe
		danger_message = $ON_VESSEL$KERBAL is suffocating
		fatal_message = $ON_VESSEL$KERBAL suffocated to death
		relax_message = $ON_VESSEL$KERBAL is breathing again
	}
	Rule
	{
		name = co2 poisoning
		degeneration = 0.000555556 // 30 minutes
		modifier = poisoning
		warning_threshold = 0.01
		danger_threshold = 0.5
		warning_message = $VESSEL's CO2 levels are starting to rise
		danger_message = $ON_VESSEL$KERBAL is having trouble breathing
		fatal_message = $ON_VESSEL$KERBAL has died of CO2 poisoning
		relax_message = $ON_VESSEL$KERBAL is breathing normally again
	}
	Rule
	{
		name = stress
		degeneration = 0.000000008 // 3.96 years
		variance = 0.1
		modifier = living_space,comfort,pressure
		breakdown = true // trigger breakdown event instead of death
		warning_message = $ON_VESSEL$KERBAL is losing their mind@<i>Concentration is becoming a problem</i>
		danger_message = $ON_VESSEL$KERBAL is about to breakdown@<i>The stress is too much</i>
		relax_message = $ON_VESSEL$KERBAL is thinking straight now@<i>The stress level has reduced</i>
	}
	Rule
	{
		name = radiation
		degeneration = 1.0 // just use the modifier??
		variance = 0.1 // IRL variations are huge, may want to keep them low or remove them for balance though
		lifetime = true // Persists as a life time value
		modifier = radiation,shielding
		warning_threshold = 75.0
		danger_threshold = 100.0
		fatal_threshold = 150.0 // based on the career limit for ESA, FPA, CSA, NASA averages and JAXA averages + 50% bonus
		warning_message = $ON_VESSEL$KERBAL has been exposed to intense radiation
		danger_message = $ON_VESSEL$KERBAL is reporting symptoms of radiation poisoning
		fatal_message = $ON_VESSEL$KERBAL died after being exposed to extreme radiation
		relax_message = $ON_VESSEL$KERBAL no longer exposed to high levels of radiation
	}

// ==============================================================================
// PROCESSES
// ==============================================================================


	Process
	{
		name = eva scrubber
		modifier = _EVAScrubber
		input = ElectricCharge@0.020
		input = WasteAtmosphere@0.0099  			// efficiency starts at 2 (2 x a pods scrubber), reaches 1 in 8h, then drops below
		input = _EVAScrubber@0.0000347
	}

	//Made for the Mercury Capsule
	Process
	{
		name = non-regenerative scrubber
		modifier = _NonRegenScrubber
		input = WasteAtmosphere@0.012432
		input = ElectricCharge@0.1
		input = LithiumHydroxide@0.00001189
		input = _NonRegenScrubber@0.000005787   	//2 days, goes under the minimum shortly after
		output = Waste@0.00003234					//Li2CO3 accumulating in the filters for mass conservation
		dump = true
	}

	// Water sublimator for heat removal, currently half-useless since kerbals won't die when it runs out
	// Used to add EC consumption and water tanks to EVA - based on the Apollo PLSS
	Process
	{
		name = water sublimator
		modifier = _WaterSublimator
		input = ElectricCharge@0.020    			// 45 watts (total with the scrubber) deducted from the Apollo PLSS battery load, rest is automatically added by the climatization rule
		input = Water@0.0001554    					//consumes around 0.56kg of water in 1h
	}

	// Based on the Lithium Hydroxide Apollo Scrubber
	// convention: 1 capacity = enough to scrub output of 1 crew member
	Process
	{
		name = scrubber
		modifier = _Scrubber
		input = ElectricCharge@0.1
		input = WasteAtmosphere@0.006216
		input = LithiumHydroxide@0.00001189
		output = Waste@0.00001617					//Waste since it's Li2CO3
		dump = true
	}

	Process
	{
		name = vacuum scrubber
		modifier = _VacScrubber
		input = ElectricCharge@0.15
		input = WasteAtmosphere@0.006216
		output = CarbonDioxide@0.0055944 //90% efficiency, roughly 100g per day lost to space
		dump = true
	}

	//Based on the Orion vacuum scrubber
	// convention: 1 capacity = enough to scrub output of 1 crew member
	Process
	{
		name = advanced scrubber
		modifier = _AdvScrubber
		input = ElectricCharge@0.1
		input = WasteAtmosphere@0.006216
		output = CarbonDioxide@0.00615384	//99% efficiency, roughly 10g per day lost to space
		dump = true
	}

	// Vostok/Voskhod used KO2 to generate O2 (4KO2 + 2H2O -> 4KOH + 3O2) and absorb CO2 (4KOH + 2CO2 -> 2K2CO3 + H2O)
	// 284.4g of Potassium Superoxide and 36g of Water give 96g of Oxygen and 224.4g of KOH (in this case, Waste)
	// for 835g of O2 (1 human daily consumption), 2472.2g of KO2 and 313g of H2O are needed
	// K2CO3 is considered to be Waste
	Process
	{
		name = potassium scrubber
		modifier = _KO2Scrubber
		input = ElectricCharge@0.01
		input = PotassiumSuperoxide@0.00001337  //2472.2g per day
		input = WasteAtmosphere@0.00453827  //765g per day
		output = Oxygen@0.006851  //barely more than required
		output = Waste@0.000020859375  //2403g per day
		dump_valve = Oxygen, Waste, Oxygen&Waste
	}

	// ISS has normal air pressure at 101.3kPa (14.7 psi)
	// convention: 1 capacity = enough to compensate for leaks in 70 m^2 surface (a cube of 40 m^3 volume)
	Process
	{
		name = N2 pressure control
		modifier = _PressureControl,non_breathable
		input = ElectricCharge@0.0858
		input = Nitrogen@0.35
		output = Atmosphere@0.35
	}

	// Pressure controller for Oxygen-only capsules
	// convention: 1 capacity = enough to compensate for leaks in 70 m^2 surface (a cube of 40 m^3 volume)
	Process
	{
		name = O2 pressure control
		modifier = _PressureControlOxygen,non_breathable
		input = ElectricCharge@0.0858
		input = Oxygen@0.35
		output = Atmosphere@0.35
	}

	// convention: when pressure control is disable in breathabe atmosphere, air pump will consume only EC and pumping air into the vessel
	Process
	{
		name = air pump
		modifier = _AirPump,breathable
		input = ElectricCharge@0.0158
		input = WasteAtmosphere@0.735
		output = Atmosphere@0.735
		dump = true
	}

	// Based on ISS Urine Reclamation
	// convention: 1 capacity = enough to recycle output of 1 crew member
	Process
	{
		name = water recycler
		modifier = _WaterRecycler
		input = ElectricCharge@0.1
		input = WasteWater@0.00004458  // Matched to single crew output
		output = Water@0.0000336 // ISS currently achieves 75% Water recovery
		output = Ammonia@0.00000104 // Based on Wikipedia, we assume 4.21% of WasteWater is solids and 55% of solids are Urea
		dump_valve = Water,Ammonia,Water&Ammonia
	}

	Process
	{
		name = waste incinerator
		modifier = _WasteIncinerator
		input = Waste@0.0001082667 // H18C82
		input = Oxygen@0.1589194249
		output = CarbonDioxide@0.1497439605
		output = Water@0.0000131259
		output = ElectricCharge@0.005
		dump_valve = Water,ElectricCharge,Water&ElectricCharge
	}

	Process
	{
		name = atmo leaks
		modifier = surface,non_breathable
		input = Atmosphere@0.000006711
			// dimensions based on this document: https://www.nasa.gov/pdf/179225main_ISS_Poster_Back.pdf
			// from ISS: 930 m� volume, 0.227 Kg/day (structural) + 1.543 Kg/day (activities)
			// total pressurized space length (obtained by sum of all the individual modules length): 123.6 m
			// average module radius and corresponding surface area: 1.552 m, 1220 m� (estimated)
			// leak rate 0.0004 kg/(day*m�)
	}

	// Fuel Cells are based off of 1.0kW produced. For the process controller, we
	// should be multiplying the capacity * the amount we want produced
	// Eg. Apollo Fuel Cells were 1.42kW so the capacity = 1.42
	Process
	{
		name = fuel cell
		modifier = _FuelCell
		input = LqdOxygen@0.000134718
		input = LqdHydrogen@0.000269436
		output = Water@0.0001186
		output = ElectricCharge@1.0
		dump_valve = Water
	}

	// Based on current electrolysis rates where it takes 12.749kWh to make 1L of H
	// Convention: 1 "unit" creates just a little more O2 per second than is needed for 1 crew
	Process
	{
		name = water electrolysis
		modifier = _WaterElectrolysis
		input = ElectricCharge@0.178486
		input = Water@0.000011248
		output = Hydrogen@0.014
		output = Oxygen@0.007
		dump_valve = Hydrogen,Oxygen
	}

	Process
	{
		name = sabatier process
		modifier = _Sabatier
		input = ElectricCharge@0.8
		input = CarbonDioxide@0.0172683775
		input = Hydrogen@0.064721246
		output = Water@0.0000259988
		output = LqdMethane@0.0000271941
		dump_valve = Water,LqdMethane
	}
	// source: https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20100036570.pdf
	// scaled to match sabatier output
	Process
	{
		name = methane pyrolosis
		modifier = _CH4Pyrolosis
		input = ElectricCharge@0.7
		input = LqdMethane@0.0000271941
		output = Hydrogen@0.00447458318
		//output = Ethylene@0.00001966868992  Removed output since nothing uses Ethylene
		//dump_valve = Ethylene
	}

	//  source: https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20190031739.pdf
	//  based on 100L unit, food value based on algae output mass minus 95% water content recovered during processing
	Process
	{
		name = algae bioreactor
		modifier = _algae
		input = ElectricCharge@0.016
		input = CarbonDioxide@0.0003642625469
		input = WasteWater@0.000001736111111
		output = Oxygen@0.0006932114657
		output = Water@0.000001425957342
		output = Food@0.0000001853274065
		dump_valve = Oxygen,Water,Food,Oxygen&Water,Oxygen&Food,Water&Food,Oxygen&Water&Food
	}

	//  source: https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20150016088.pdf
	//  3 processes since both mass and efficiency change with size.
	Process
	{
		name = molten regolith pyrolosis
		modifier = _MRP
		input = ElectricCharge@1.444247885
		input = Regolith@0.0000027667584
		output = Oxygen@0.007 //44% oxygen recovered, remaining mass discarded
	}

	//  source: https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20170001808.pdf
	//  convention: 1 capacity = 36g/hr, just over 1 kerbal worth of Oxygen
	Process
	{
		name = MOXIE
		modifier = _MOXIE
		input = ElectricCharge@0.24
		input = CarbonDioxide@0.01409853921
		output = Oxygen@0.007092198582
		//output = CarbonMonoxide@0.014005 //discarded since we don't use it yet
	}

	//  source: https://pdfs.semanticscholar.org/9159/213d6ad79bd800d07525bc37463588742662.pdf
	//  convention: 1 capacity = 22 tons in 300 days with 50% uptime, roughly 1/5th Mars Direct or enough for a large unmanned return
	Process
	{
		name = SE-RWGS
		modifier = _RWGS
		input = ElectricCharge@38.0630714
		input = CarbonDioxide@0.8433582486
		input = Hydrogen@1.044616251
		output = LqdMethane@0.0008827766639
		output = LqdOxygen@0.001185518392
		dump_valve = LqdMethane,LqdOxygen
	}

	//  source: https://www.mdpi.com/2073-4344/8/9/379
	//  convention: scaled to take output of 12 electrolizers (capacity of miniISRU)
	Process
	{
		name = HTP Synthesis
		modifier = _HTPSynthesis
		input = ElectricCharge@0.1
		input = Hydrogen@0.1162138813
		input = Oxygen@0.084
		output = Water@0.0000106018366
		output = HTP@0.00009541652939
		dump_valve = Water
	}

	// convention: scaled to match input of _HydrazineSynthesis
	Process
	{
		name = Haber-Bosch Process
		modifier = _HaberBosch
		input = ElectricCharge@0.3685524471
		input = Hydrogen@0.2706260197
		input = Nitrogen@0.08992230669
		output = Ammonia@0.1778176725
	}

	//  convention: scaled to take output of 12 electrolizers (capacity of miniISRU)
	Process
	{
		name = Ostwald Process
		modifier = _OstwaldProcess
		input = ElectricCharge@0.1
		input = Oxygen@0.084
		input = Ammonia@0.04683803641
		output = Water@0.00005716845
		output = NTO@0.00006710384483
	}

	// source: https://apps.dtic.mil/dtic/tr/fulltext/u2/a016905.pdf
	// convention: scaled to match output of _HTPSynthesis
	Process
		{
			name = Hydrazine Synthesis
			modifier = _HydrazineSynthesis
			input = ElectricCharge@0.01679760881
			input = Ammonia@0.1778176725
			input = HTP@0.00009541652939
			output = Water@0.0001446909606
			output = Hydrazine@0.0001281595396
		}

	Process
 	{
		name = brayton generator
		modifier = _BraytonGenerator
		input = EnrichedUranium@4.3252e-17
		output = ElectricCharge@1
		output = DepletedUranium@4.3252e-17
 	}

 	Process
 	{
		name = turbine generator
		modifier = _TurbineGenerator
		input = EnrichedUranium@6.66667E-14
		output = ElectricCharge@1
		output = DepletedUranium@6.66667E-14
 	}

	// 0.55 capacity = oxygen for 1 crew member (0.01764 g/s)
	// since heating up oxygen could be completely passive or completely active based on external temperature, we make 2 assumptions:
	// 1. the external temperature is high enough that O2 is always above its critical point (90K) (so that vaporization is free)
	// 2. we have to bring the gaseous O2 from external ambient temp to room temperature
	// the EC consumption is therefore defined as the power needed to heat oxygen from external temp to internal temp (20� C)
	// O2 isochoric specific heat = ~1300 J/(Kg*K) for 0.01764 g/s => 0.023 W/K * 203 K = 4.67 W
	Process
	{
		name = lox to ox converter
		modifier = _LOXConverter
		input = LqdOxygen@0.0000154599
		input = ElectricCharge@0.00467
		output = Oxygen@0.0125104279
	}

	// convention: 1 capacity = 90% of MRP output to keep it from liquifying life support supplies
	Process
	{
		name = ox to lox converter
		modifier = _OXConverter
		input = Oxygen@0.0504
		input = ElectricCharge@0.334 // Best option 2873 W for 2.2kg/hr source: https://www.sciencedirect.com/science/article/pii/S0011227517302187
		output = LqdOxygen@0.00006228235886
	}

	// convention: 1 capacity = enough to feed SE-RWGS (~0.094 g/s)
	// since heating up hydrogen could be completely passive or completely active based on external temperature, we make 2 assumptions:
	// 1. the external temperature is high enough that H2 is always above its critical point (20K) (so that vaporization is free)
	// 2. we have to bring the gaseous H2 from external ambient temp to room temperature
	// the EC consumption is therefore defined as the power needed to heat hydrogen from external temp to internal temp (20� C)
	// H2 isochoric specific heat = ~10 000 J/(Kg*K) for 0.094 g/s => 0.94 W/K * 313 K = 294 W
	Process
	{
		name = lh2 to h2 converter
		modifier = _LH2Converter
		input = LqdHydrogen@0.001325490486
		input = ElectricCharge@0.294
		output = Hydrogen@1.044616251
	}

	// convention: 1 capacity = enough to liquify the output of 1 electrolizer
	Process
	{
		name = h2 to lh2 converter
		modifier = _H2Converter
		input = Hydrogen@0.042
		input = ElectricCharge@0.08835372	// source: https://cordis.europa.eu/project/id/278177/reporting/pl 6.5kWh/kg
		output = LqdHydrogen@0.00005329287227
	}

	Process
	{
		name = launch clamp pump
		modifier = _ClampPump
		output = ElectricCharge@1.0
		output = Oxygen@1.0
		output = LqdOxygen@1.0
		output = Hydrogen@1.0
		output = LqdHydrogen@1.0
		output = Food@1.0
		output = Water@1.0
		output = Nitrogen@1.0
	}

	// regolith density = 0.002
	// shielding density = 1.35
	// regolith has very similar shielding capabilities to aluminum, so a 1-1 conversion makes sense
	Process
	{
		name = regolith compacter
		modifier = _RegolithCompacter,landed
		input = Regolith@1.0
		output = Shielding@0.0014814815
	}

	// FIXME: Determine proper Half-life for what we want
	// plutonium RTG, half-life of 87.7 years
	// from actual power output degradation of various missions including Voyager,
	// Cassini and New Horizons, 50% power output is reached at around T+ 40y.
	// This is caused by thermocoupler degradation. More advanced thermocuplers could generate
	// 25% more power at the beginning of a mission and at least 50% more after seventeen years.
	// source: https://www.jpl.nasa.gov/news/news.php?feature=6646
	Process
	{
		name = RTG
		modifier = _RTG
		input = _RTG@0.00000000039637  // 40 year half-life
		output = ElectricCharge@1.0
		dump = true
	}

	Process
	{
		name = colony-life
		title = Comforts
		modifier = _SickbayColony,landed
		input = ElectricCharge@0.1 // 100W for miscellaneous high efficiency electronics and comforts
		input = Water@0.00011574 // 10L per day for personal hygiene, washing clothes, and more relaxed water use
		output = WasteWater@0.00011574
		dump = true
		cures = stress@0.0000000084 // 5% margin, to cover almost any astronaut. Some may still accumulate some stress
	}

	Process
	{
		name = orbital-colony
		title = Comforts
		modifier = _SickbayOrbital
		input = ElectricCharge@0.15 // 150W for miscellaneous high efficiency electronics. Slightly more than landed
		input = Water@0.00005787 // 5L per day for zero-g shower, washing clothes, and more relaxed water use
		output = WasteWater@0.0005787
		dump = true
		cures = stress@0.000000008 // no margin, so a bit more astronauts will accumulate some stress
	}
}

// ============================================================================
// RTGs
// ============================================================================
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RTG]]]:NEEDS[ProfileRealismOverhaul]:FOR[RP-0-Kerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = RTG
		capacity = #$../MODULE[ModuleResourceConverter]/OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]/Ratio$
		running = true
		toggle = false
	}
  	!MODULE[ModuleCoreHeat],*{}
}

// ============================================================================
// Add configurable Life Support System to Life Support Unit part
// ============================================================================

@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileRealismOverhaul]:FOR[Kerbalism]
{
	@mass = 0.0001
	%RSSROConfig = true
	%tags = _kerbalism, life support, eclss, ls, external life support module

	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = LiOH Scrubber
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _KO2Scrubber
		title = KO2 Scrubber
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AdvScrubber
		title = Advanced Vacuum Scrubber
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _VacScrubber
		title = Vacuum Scrubber
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = N2 Pressure Controller
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _PressureControlOxygen
		title = O2 Pressure Controller
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = Air Pump
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water Recycler
		capacity = 3
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LOXConverter
		title = LOX to GOX Converter
		capacity = 3
		running = true
	}

	processConfigureExclude = true
	MODULE
	{
		name = Configure
		title = Life Support
		slots = 1

		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings.
		}

		SETUP
		{
			name = LiOHScrubber
			desc = A Lithium Hydroxide scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			tech = earlyLifeSupport
			mass = 0.02 //FIXME
			cost = 25 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = KO2 Scrubber
			desc = A Potassium superoxide scrubber that absorbs <b>CarbonDioxide</b> from the internal atmosphere and generates <b>Oxygen</b> for the crew.
			tech = earlyLifeSupport
			mass = 0.05 //FIXME
			cost = 40 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _KO2Scrubber
			}
		}

		SETUP
		{
			name = Vacuum Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			tech = basicLifeSupport
			mass = 0.2 //FIXME
			cost = 25 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _VacScrubber
			}
		}

		SETUP
		{
			name = Advanced Vacuum Scrubber
			desc = An advanced dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			tech = improvedLifeSupport
			mass = 0.15 //Current ISS CDRA system is 197kg for 4 crew.
			cost = 20 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AdvScrubber
			}
		}

		SETUP
		{
			name = N2 Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = earlyLifeSupport
			mass = 0.05 //FIXME
			cost = 25 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}
		}

		SETUP
		{
			name = O2 Pressure Control
			desc = Use <b>Oxygen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = earlyLifeSupport
			mass = 0.01 //FIXME
			cost = 25 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControlOxygen
			}
		}

		SETUP
		{
			name = Air Pump
			desc = Pumps external atmosphere into the cabin to maintan internal pressure. Only works in breathable atmospheres
			tech = crewSurvivability
			mass = 0.02 //FIXME
			cost = 5 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AirPump
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = advancedLifeSupport
			mass = 0.57 //  Using ISS urine processing system since that's our only wastewater generator, 742kg for 4 crew
			cost = 50 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
		}

		SETUP
		{
			name = LOX to GOX Converter
			desc = Heats <b>LqdOxygen</b> to breathable <b>Oxygen</b>.
			tech = earlyLifeSupport
			mass = 0.005 //FIXME
			cost = 20 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LOXConverter
			}
		}
	}
}

// ============================================================================
// Dedicate Fuel Cell part
// ============================================================================
+PART[kerbalism-lifesupportmodule]:NEEDS[ProfileRealismOverhaul]:BEFORE[Kerbalism]
{
	@name = kerbalism-fuelcell
	@title = External Fuel Cell
}

@PART[kerbalism-fuelcell]:NEEDS[ProfileRealismOverhaul]:FOR[RO-Kerbalism]
{
	@mass = 0.0001
	%RSSROConfig = true
	@category = Electrical
	%tags = _kerbalism, fuel cell, hydrogen, oxygen, apollo, gemini, shuttle

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Gemini Fuel Cell
		capacity = 1
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Apollo Fuel Cell
		capacity = 1
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Soyuz Fuel Cell
		capacity = 1
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Shuttle Fuel Cell
		capacity = 1
		running = true
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP //Gemini
		{
			name = Acid IEM Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = improvedPower
			mass = 0.10

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Gemini Fuel Cell
			}
		}

		SETUP //Apollo
		{
			name = Apollo alkaline Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = lunarRatedPower
			mass = 0.075

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Apollo Fuel Cell
			}
		}

		SETUP //Soyuz
		{
			name = Soyuz Volna-20 Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = lunarRatedPower
			mass = 0.070

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Soyuz Fuel Cell
			}
		}

		SETUP //Shuttle
		{
			name = Shuttle alkaline Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = maturePower
			mass = 0.015

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Shuttle Fuel Cell
			}
		}
  	}
}

@PART[FuelCell]:NEEDS[ProfileRealismOverhaul]:AFTER[RO-Kerbalism]
{
	!MODULE[ModuleResourceConverter] {}

	@mass = 0.0001
	%RSSROConfig = true
	@category = Electrical
	%tags = _kerbalism fuel cell, hydrogen, oxygen, apollo, gemini, shuttle

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Gemini Fuel Cell
		capacity = 0.75
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Apollo Fuel Cell
		capacity = 0.75
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Shuttle Fuel Cell
		capacity = 0.75
		running = true
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP //Gemini
		{
			name = Acid IEM Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = improvedPower
			mass = 0.075

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Gemini Fuel Cell
			}
		}

		SETUP //Apollo
		{
			name = Apollo alkaline Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = lunarRatedPower
			mass = 0.05625

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Apollo Fuel Cell
			}
		}

		SETUP //Shuttle
		{
			name = Shuttle alkaline Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = maturePower
			mass = 0.01125

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Shuttle Fuel Cell
			}
		}
 	}
}

@PART[FuelCellArray]:NEEDS[ProfileRealismOverhaul]:AFTER[RO-Kerbalism]
{
	!MODULE[ModuleResourceConverter] {}

	@mass = 0.0001
	%RSSROConfig = true
	@category = Electrical
	%tags = _kerbalism, fuel cell, hydrogen, oxygen, apollo, gemini, shuttle

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Gemini Fuel Cell
		capacity = 6
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Apollo Fuel Cell
		capacity = 6
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Shuttle Fuel Cell
		capacity = 6
		running = true
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP //Gemini
		{
			name = Acid IEM Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = improvedPower
			mass = 0.55

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Gemini Fuel Cell
			}
		}

		SETUP //Apollo
		{
			name = Apollo alkaline Fuel Cell
			desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
			tech = lunarRatedPower
			mass = 0.4125

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Apollo Fuel Cell
			}
		}

		SETUP //Shuttle
		{
		name = Shuttle alkaline Fuel Cell
		desc = Combines <b>LqdHydrogen</b> and <b>LqdOxygen</b> to produce <b>Water</b> and <b>Electricity</b>.
		tech = maturePower
		mass = 0.0825

			MODULE
			{
				type = ProcessController
				id_field = title
				id_value = Shuttle Fuel Cell
			}
		}
  	}
}

// ============================================================================
// Add EC Generation to Launch Clamps
// ============================================================================

@PART:HAS[@MODULE[LaunchClamp]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _ClampPump
		title = Resource Pump
		capacity = 10.0
		running = true
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = Air Pump
		capacity = 5.0
		running = true
		toggle = true
	}
	!MODULE[ModuleGenerator] {}
}

@PART:HAS[@MODULE[ModuleRestockLaunchClamp]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _ClampPump
		title = Resource Pump
		capacity = 10.0
		running = true
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = Air Pump
		capacity = 5.0
		running = true
		toggle = true
	}
	!MODULE[ModuleGenerator] {}
}
// ============================================================================
// Configure Liquefaction parts
// ============================================================================
@PART[Liquifier,LiquefactionArray]:NEEDS[ProfileRealismOverhaul]:FOR[Kerbalism]
{
	%RSSROConfig = true
	%tags = _kerbalism, life support, liquefaction

	MODULE
	{
		name = ProcessController
		resource = _OXConverter
		title = GOX to LOX Converter
		capacity = 1
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LOXConverter
		title = LOX to GOX Converter
		capacity = 10
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _LH2Converter
		title = LH2 to GH2 Converter
		capacity = 1
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _H2Converter
		title = GH2 to LH2 Converter
		capacity = 4
		running = true
	}
	
	processConfigureExclude = true
	MODULE
	{
		name = Configure
		title = Liquifier
		slots = 2

		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any liquefaction.
		}

		SETUP
		{
			name = LOX to GOX Converter
			desc = Heats <b>LqdOxygen</b> to breathable <b>Oxygen</b>.
			tech = earlyLifeSupport
			mass = 0.05 //FIXME
			cost = 50 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LOXConverter
			}
		}
		SETUP
		{
			name = GOX to LOX Converter
			desc = Liquifies breathable <b>Oxygen</b> into <b>LqdOxygen</b>.
			tech = advancedLifeSupport
			mass = 0.017 //FIXME  Best option processes 2.2kg/hr w/mass of 68kg source: https://www.sciencedirect.com/science/article/pii/S0011227517302187
			cost = 50 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _OXConverter
			}
			RESOURCE
			{
				name = Oxygen
				amount = 0
				maxAmount = 500
			}
		}
		SETUP
		{
			name = LH2 to GH2 Converter
			desc = Heats <b>LqdHydrogen</b> to gaseous <b>Hydrogen</b>.
			tech = advancedLifeSupport
			mass = 0.05 //FIXME
			cost = 20 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LH2Converter
			}
		}
		SETUP
		{
			name = GH2 to LH2 Converter
			desc = Liquifies gaseous <b>Hydrogen</b> into <b>LqdHydrogen</b>.
			tech = advancedLifeSupport
			mass = 0.1 //FIXME
			cost = 100 //FIXME

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _H2Converter
			}
			RESOURCE
			{
			    name = Hydrogen
			    amount = 0
			    maxAmount = 4500
			}
		}
	}
}

@PART[LiquefactionArray]:NEEDS[ProfileRealismOverhaul]:FOR[Kerbalism]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 5
	}
}




// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _EVAScrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_EVAScrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, eva scrubber, wasteatmosphere
}

RESOURCE_DEFINITION
{
  name = _NonRegenScrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_NonRegenScrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, wasteatmosphere
}

RESOURCE_DEFINITION
{
  name = _WaterSublimator
  density = 0.0
  isVisible = false
}
// only present in EVA suit

RESOURCE_DEFINITION
{
  name = _Scrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_Scrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, lioh scrubber, lioh, wasteatmosphere
}

RESOURCE_DEFINITION
{
  name = _KO2Scrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_KO2Scrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, ko2 scrubber, ko2
}

RESOURCE_DEFINITION
{
  name = _AdvScrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_AdvScrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, vacuum scrubber, advanced scrubber, wasteatmosphere
}


RESOURCE_DEFINITION
{
  name = _VacScrubber
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_VacScrubber]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, scrubber, vacuum scrubber, advanced scrubber, wasteatmosphere
}

RESOURCE_DEFINITION
{
  name = _MRP
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_MRP]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, mrp, regolith, molten regolith pyrolosis
}

RESOURCE_DEFINITION
{
  name = _HTPSynthesis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HTPSynthesis]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, HTP, HTP Synthesis
}

RESOURCE_DEFINITION
{
  name = _HaberBosch
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HaberBosch]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, haber-bosch, ammonia
}

RESOURCE_DEFINITION
{
  name = _OstwaldProcess
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_OstwaldProcess]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, ostwald, ammonia, NTO
}

RESOURCE_DEFINITION
{
  name = _HydrazineSynthesis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HydrazineSynthesis]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, hydrazine synthesis, hydrazine, HTP
}

RESOURCE_DEFINITION
{
  name = _RWGS
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RWGS]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, rwgs, se-rwgs, sabatier, sabatier electrolysis, electrolysis
}

RESOURCE_DEFINITION
{
  name = _algae
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_algae]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, algae, algae bioreactor, bioreactor, food
}


RESOURCE_DEFINITION
{
  name = _MOXIE
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_MOXIE]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, moxie, mars oxygen, oxygen, carbon dioxide, co2
}

RESOURCE_DEFINITION
{
  name = _CH4Pyrolosis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_CH4Pyrolosis]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, ch4, ch4 pyrolosis, methane pyrolosis, plasma methane pyrolosis
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_PressureControl]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, pressure, pressure control, pressure controller, nitrogen, nitrogen pressure control, atmosphere
}

RESOURCE_DEFINITION
{
  name = _PressureControlOxygen
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_PressureControlOxygen]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, pressure, pressure control, pressure controller, oxygen, oxygen pressure control, atmosphere
}

RESOURCE_DEFINITION
{
  name = _AirPump
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_AirPump]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, airpump, air pump, pressure, atmosphere
}

RESOURCE_DEFINITION
{
  name = _WasteIncinerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WasteIncinerator]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, waste, waste incinerator, waste burner, incinerator, co2
}

RESOURCE_DEFINITION
{
  name = _RTG
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RTG]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, rtg, radioisotope thermoelectric generator, radioactive, generator
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_FuelCell]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, fuel cell, lqdhydrogen, lqdoxygen, generator
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WaterElectrolysis]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, water electrolysis, water, electrolysis, hydrogen, oxygen
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WaterRecycler]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, water recycler, water, wastewater, ammonia
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_Sabatier]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, sabatier, sabatier reactor, methane, co2, water, lqdmethane
}

RESOURCE_DEFINITION
{
  name = _BraytonGenerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_BraytonGenerator]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, nuclear engine, generator, nuclear generator, brayton generator
}

RESOURCE_DEFINITION
{
  name = _TurbineGenerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_TurbineGenerator]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, nuclear engine, generator, nuclear generator, turbine generator
}


RESOURCE_DEFINITION
{
  name = _OXConverter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_OXConverter]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, lo2, lox, lqdoxygen, oxygen liquifier, liquifier, liquefaction, liquid oxygen, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _LOXConverter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_LOXConverter]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, o2, ox, oxygen, lqdoxygen evaporator, evaporator, gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _LH2Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_LH2Converter]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, h2, hydrogen, lqdhydrogen evaporator, evaporator, gas, hydrogen converter, converter
}

RESOURCE_DEFINITION
{
  name = _H2Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_H2Converter]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, lh2, lqdhydrogen, hydrogen liquifier, liquefier, liquefaction, liquid hydrogen, hydrogen converter, converter
}

RESOURCE_DEFINITION
{
  name = _ClampPump
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_ClampPump]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, clamp, launch clamp, clamp generator
}

RESOURCE_DEFINITION
{
  name = _RegolithCompacter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RegolithCompacter]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, regolith, regolith compacter, shielding
}

RESOURCE_DEFINITION
{
  name = _SickbayColony
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayColony]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, stress, colony, habitation
}

RESOURCE_DEFINITION
{
  name = _SickbayOrbital
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayOrbital]]]:NEEDS[ProfileRealismOverhaul]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, stress, colony, habitation
}
