// ============================================================================
// Stock panel module work correctly at arbitrary warp speed and EC capacity
// ============================================================================

@PART[*]:HAS[@MODULE[ModuleDeployableSolarPanel]]:FOR[KerbalismDefault]
{
  // duplicate every ModuleDeployableSolarPanel
  // Some parts may use multiple MDSP modules,
  // so we have to add a SolarPanelFixer module each of them
  +MODULE[ModuleDeployableSolarPanel],*
  {
    // delete all values
    -* = delete
    // delete all possible nodes
    -powerCurve {}
    -temperatureEfficCurve {}
    -timeEfficCurve {}
    -UPGRADES {}
    // rename the module to SolarPanelFixer
    name = SolarPanelFixer
  }
}

// ============================================================================
// Replace readings with our own telemetry providers
// ============================================================================

@PART[sensorThermometer]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

  MODULE
  {
    name = Sensor
    type = temperature
  }
}

@PART[sensorBarometer]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

    MODULE
    {
      name = Sensor
      type = pressure
    }
}

@PART[sensorGravimeter]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

  MODULE
  {
    name = Sensor
    type = gravioli
  }
}
@PART[RO-GeigerMuller|FASAProbeGeigerCounter|RO-ScintillationCounter]:FOR[RP-0-Kerbalism]:NEEDS[RP-0]
{
  MODULE
	{
		name = Sensor
		type = radiation
	}
}


// ============================================================================
// RTG cost and mass fixes
// ============================================================================

@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RTG]]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
  // get the amount of Pu
  PuMass = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the mass by multiplying for the density
  @PuMass *= 0.019816
  // add the Pu mass to the part
  @mass += #$PuMass$

  // get the amount of Pu
  PuCost = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the cost by multiplying for the unit cost

  @PuCost *= #$@RESOURCE_DEFINITION[Plutonium-238]/unitCost$
  //PuCost *= 7821.782178

  // add the Pu cost to the part
  @cost += #$PuCost$

  // delete resources
  !RESOURCE[Plutonium-238] {}
  !RESOURCE[DepletedFuel] {}

  //delete old converter module
  !MODULE[ModuleResourceConverter],*{}
}

//source: https://web.archive.org/web/20130215003518/http://fti.neep.wisc.edu/neep602/SPRING00/lecture5.pdf
// $2800/gram (2000$) = $512,000/kg (1965$) = 512 funds/kg
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RTGPo210]]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
  // get the amount of Pu
  PuMass = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the mass by multiplying for the density
  @PuMass *= 0.019816
  // add the Pu mass to the part
  @mass += #$PuMass$

  // get the amount of Pu
  PuCost = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the cost by multiplying for the unit cost

  //@PuCost *= #$@RESOURCE_DEFINITION[Plutonium-238]/unitCost$
  @PuCost *= 512

  // add the Pu cost to the part
  @cost += #$PuCost$

  // delete resources
  !RESOURCE[Plutonium-238] {}
  !RESOURCE[DepletedFuel] {}

  //delete old converter module
  !MODULE[ModuleResourceConverter],*{}
}

//source: https://web.archive.org/web/20130215003518/http://fti.neep.wisc.edu/neep602/SPRING00/lecture5.pdf
// $2000/gram (2000$) = $365,000/kg (1965$) = 365 funds/kg
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RTGCm242]]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
  // get the amount of Pu
  PuMass = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the mass by multiplying for the density
  @PuMass *= 0.019816
  // add the Pu mass to the part
  @mass += #$PuMass$

  // get the amount of Pu
  PuCost = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the cost by multiplying for the unit cost

  //@PuCost *= #$@RESOURCE_DEFINITION[Plutonium-238]/unitCost$
  @PuCost *= 365

  // add the Pu cost to the part
  @cost += #$PuCost$

  // delete resources
  !RESOURCE[Plutonium-238] {}
  !RESOURCE[DepletedFuel] {}

  //delete old converter module
  !MODULE[ModuleResourceConverter],*{}
}
